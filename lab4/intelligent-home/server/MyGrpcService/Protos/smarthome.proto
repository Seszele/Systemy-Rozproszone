syntax = "proto3";
import "google/protobuf/empty.proto";
package smarthome;

// Base service for all devices
service DeviceManager {
  rpc ListDevices (ListDevicesRequest) returns (ListDevicesResponse);
  rpc GetDeviceStatus (DeviceStatusRequest) returns (DeviceStatusResponse);
}

message ListDevicesRequest {}
message ListDevicesResponse {
  repeated DeviceInfo devices = 1;
}
message DeviceInfo {
  string id = 1;
  string type = 2;
  SpeakerSubtype speakerSubtype = 3;
}
message DeviceStatusRequest {
  string id = 1;
}
message DeviceStatusResponse {
  string id = 1;
  string status = 2;
}

// Temperature sensor service
service TemperatureSensor {
  rpc GetTemperature (TemperatureRequest) returns (TemperatureResponse);
}
message TemperatureRequest {
  string id = 1;
}
message TemperatureResponse {
  string id = 1;
  float temperature = 2;
}

// Camera service
service Camera {
  rpc GetImage (ImageRequest) returns (ImageResponse);
  rpc ControlPTZ (PTZControlRequest) returns (PTZControlResponse);
}

message ImageRequest {
  string id = 1;
}

message ImageResponse {
  string id = 1;
  bytes imageData = 2;
}

message PTZControlRequest {
  string id = 1;
  PTZControl control = 2;
}
enum PTZControl {
  PAN_LEFT = 0;
  PAN_RIGHT = 1;
  TILT_UP = 2;
  TILT_DOWN = 3;
  ZOOM_IN = 4;
  ZOOM_OUT = 5;
}
message PTZControlResponse {
  string id = 1;
  bool success = 2;
}

// Smart speaker service
service SmartSpeaker {
  rpc GetVolume (SpeakerRequest) returns (SpeakerVolumeResponse);
  rpc SetVolume (SpeakerVolumeRequest) returns (google.protobuf.Empty);

  rpc PlayAudio (SpeakerRequest) returns (google.protobuf.Empty);
  rpc PauseAudio (SpeakerRequest) returns (google.protobuf.Empty);
  rpc GetAudioStatus (SpeakerRequest) returns (AudioStatusResponse);
}

message SpeakerRequest {
  string id = 1;
}

message SpeakerVolumeResponse {
  string id = 1;
  int32 volume = 2;
}

message SpeakerVolumeRequest {
  string id = 1;
  int32 volume = 2;
}

message AudioStatusResponse {
  string id = 1;
  bool playing = 2;
}

// Smart speaker subtypes
message SpeakerSubtype {
  oneof subtype {
    BasicSpeaker basic = 1;
    BluetoothSpeaker bluetooth = 2;
    WiFiSpeaker wifi = 3;
  }
}

message BasicSpeaker {}

message BluetoothSpeaker {
  string bluetoothAddress = 1;
}
message WiFiSpeaker {
  string ipAddress = 1;
}
